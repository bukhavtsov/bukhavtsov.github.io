<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>ArtemCodes</title><link>https://artem.codes/</link><description>Hi there! My name is Artem, Let's build something amazing together!</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 01 May 2024 22:40:00 +0100</lastBuildDate><atom:link href="https://artem.codes/index.xml" rel="self" type="application/rss+xml"/><item><title>How to integrate Golang Service with Chat GPT API</title><link>https://artem.codes/posts/golang-server-with-chat-gpt-api/</link><pubDate>Wed, 01 May 2024 22:40:00 +0100</pubDate><author>Author</author><guid>https://artem.codes/posts/golang-server-with-chat-gpt-api/</guid><description><![CDATA[<h1 id="how-to-integrate-golang-service-with-chat-gpt-api">How to integrate Golang Service with Chat GPT API.</h1>
<h2 id="intro">Intro</h2>
<p>In this tutorial we&rsquo;re going to create a Golang service that communicates with Chat GPT API. The source code you can find <a href="https://github.com/bukhavtsov/golang-server-with-chat-gpt-api" target="_blank" rel="noopener noreffer ">here</a>. As a result you should be able to understand how to do it and change the logic for implementing your own use cases.</p>
<h2 id="considerations">Considerations</h2>
<p>For implementing the solution we need to have:</p>
<ol>
<li>API Key to Chat GPT API and at the moment Chat GPT doesn&rsquo;t provide free trial, so you&rsquo;ll have to setup your Open API account and pay <a href="https://openai.com/api/pricing" target="_blank" rel="noopener noreffer ">X</a> per token. But for a pet project it&rsquo;s quite fair price in my opinion.</li>
<li>Golang installed.</li>
</ol>
<h2 id="what-well-try-to-develop">What we&rsquo;ll try to develop?</h2>
<p>Essentially to get familiar with Chat GPT API we&rsquo;ll try to create a smart dictionary. As an input we&rsquo;ll send a http request with a lexical item and in response we get the meaning, examples of usages.
Architecture will consist of 2 components:</p>]]></description></item><item><title>The Incredible Two Pointers technique</title><link>https://artem.codes/posts/two-pointers/</link><pubDate>Sat, 01 Jul 2023 22:40:00 +0100</pubDate><author>Author</author><guid>https://artem.codes/posts/two-pointers/</guid><description><![CDATA[<p>Hey there, fellow learners! I&rsquo;m Artem, and today&rsquo;s lesson is all about the incredible Two Pointers technique.</p>
<h2 id="what-is-the-benefit-of-two-pointers-technique">What is the benefit of two pointers technique?</h2>
<p>Before we start digging into this technique, I want to tell you about the benefit. Two pointers technique can dramatically improve the performance of your solution. It allows you to move from <code>O(n^2)</code>, <code>O(n log n)</code> time complexity to <code>O(n)</code></p>
<h2 id="what-is-two-pointers-technique">What is two pointers technique?</h2>
<p>To understand two pointers technique you should be familiar with the data structures like arrays and linked lists, and master Big O notation. If you feel like you may need to ramp up your knowledge in understanding big o notation, I recommend you to watch my video about it.</p>]]></description></item><item><title>Big O Notation Notes</title><link>https://artem.codes/posts/my-first-post/</link><pubDate>Sat, 26 Nov 2022 22:40:00 +0100</pubDate><author>Author</author><guid>https://artem.codes/posts/my-first-post/</guid><description><![CDATA[<p>Hello everybody and welcome back. My name is Artem and in this blog post we&rsquo;re going to understand what does Big O notation mean and consider the time complexity. So, Let&rsquo;s get to it!</p>
<h2 id="why-its-essential-to-understand-and-master-big-o">Why it&rsquo;s essential to understand and master Big O?</h2>
<ul>
<li>First, it allows you to determine the most efficient solution for task that you need to resolve.</li>
<li>Secondly, it potentially could help you to optimise an existing solution that you have implemented already.</li>
<li>Finally, most likely that you&rsquo;ll not pass a coding interview without mastering this topic.</li>
</ul>
<h2 id="big-o-definition">Big O definition</h2>
<p><strong>Big O time</strong> is the language and metric that describes the efficiency of algorithms.
Or to be more precise <strong>the way to describe how long algorithm performs as it&rsquo;s input size growth.</strong></p>]]></description></item></channel></rss>