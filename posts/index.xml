<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - ArtemCodes</title><link>bukhavtsov.github.io/posts/</link><description>All Posts | ArtemCodes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 01 Jul 2023 22:40:00 +0100</lastBuildDate><atom:link href="bukhavtsov.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>The Incredible Two Pointers technique</title><link>bukhavtsov.github.io/posts/two-pointers/</link><pubDate>Sat, 01 Jul 2023 22:40:00 +0100</pubDate><author>Author</author><guid>bukhavtsov.github.io/posts/two-pointers/</guid><description>Hey there, fellow learners! I&amp;rsquo;m Artem, and today&amp;rsquo;s lesson is all about the incredible Two Pointers technique.
What is the benefit of two pointers technique? Before we start digging into this technique, I want to tell you about the benefit. Two pointers technique can dramatically improve the performance of your solution. It allows you to move from O(n^2), O(n log n) time complexity to O(n)
What is two pointers technique? To understand two pointers technique you should be familiar with the data structures like arrays and linked lists, and master Big O notation.</description></item><item><title>Big O Notation Notes</title><link>bukhavtsov.github.io/posts/my-first-post/</link><pubDate>Sat, 26 Nov 2022 22:40:00 +0100</pubDate><author>Author</author><guid>bukhavtsov.github.io/posts/my-first-post/</guid><description>Hello everybody and welcome back. My name is Artem and in this blog post we&amp;rsquo;re going to understand what does Big O notation mean and consider the time complexity. So, Let&amp;rsquo;s get to it!
Why it&amp;rsquo;s essential to understand and master Big O? First, it allows you to determine the most efficient solution for task that you need to resolve. Secondly, it potentially could help you to optimise an existing solution that you have implemented already.</description></item></channel></rss>